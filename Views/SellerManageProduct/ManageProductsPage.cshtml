@{
    ViewData["Title"] = "Manage Products";
}

<style>
    body {
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, sans-serif;
        background-color: #f5f5f5;
        color: #37352f;
    }

    h2, h3 {
        font-weight: 600;
        color: #2f2f2f;
        margin-bottom: 24px;
    }

    .message-success {
        color: #2d7d44;
        background-color: #e9f4e9;
        padding: 12px;
        border-radius: 4px;
        margin-bottom: 16px;
    }

    .message-error {
        color: #d14343;
        background-color: #fceaea;
        padding: 12px;
        border-radius: 4px;
        margin-bottom: 16px;
    }

    .notion-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        overflow: hidden;
    }

        .notion-table th {
            background-color: #f7f6f3;
            padding: 12px 16px;
            text-align: left;
            font-weight: 500;
            font-size: 14px;
            border-bottom: 1px solid #ebebeb;
        }

        .notion-table td {
            padding: 12px 16px;
            border-bottom: 1px solid #ebebeb;
            vertical-align: middle;
        }

        .notion-table tr:last-child td {
            border-bottom: none;
        }

        .notion-table img {
            border-radius: 4px;
        }

    .notion-button {
        padding: 6px 12px;
        border: none;
        border-radius: 4px;
        font-size: 14px;
        cursor: pointer;
        transition: background-color 0.2s;
        margin-right: 4px;
    }

    .create-btn, .update-btn {
        background-color: #2eaadc;
        color: white;
    }

        .create-btn:hover, .update-btn:hover {
            background-color: #268fb8;
        }

    .deactivate-btn {
        background-color: #f7b955;
        color: white;
    }

        .deactivate-btn:hover {
            background-color: #d9a447;
        }

    .activate-btn {
        background-color: #2d7d44;
        color: white;
    }

        .activate-btn:hover {
            background-color: #256737;
        }

    .delete-btn {
        background-color: #eb5757;
        color: white;
    }

        .delete-btn:hover {
            background-color: #c94a4a;
        }

    .back-link {
        display: inline-block;
        margin-top: 24px;
        color: #2eaadc;
        text-decoration: none;
        font-size: 14px;
    }

        .back-link:hover {
            text-decoration: underline;
        }

    hr {
        border: none;
        border-top: 1px solid #ebebeb;
        margin: 32px 0;
    }

    /* Modal styles */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        align-items: center;
        justify-content: center;
        overflow-y: auto; /* Cho phép cuộn nếu nội dung vượt quá màn hình */
    }

    .modal-content {
        background-color: white;
        padding: 24px;
        border-radius: 8px;
        width: 500px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        max-height: 90vh; /* Giới hạn chiều cao tối đa là 90% chiều cao viewport */
        overflow-y: auto; /* Thêm thanh cuộn nếu nội dung vượt quá */
        margin: 20px 0; /* Khoảng cách trên dưới để không sát mép màn hình */
    }

        .modal-content h3 {
            margin: 0 0 16px;
            font-weight: 500;
        }

        .modal-content label {
            display: block;
            font-size: 14px;
            font-weight: 500;
            margin-bottom: 4px;
        }

        .modal-content input[type="text"],
        .modal-content input[type="number"],
        .modal-content input[type="date"],
        .modal-content textarea,
        .modal-content select,
        .modal-content input[type="file"] {
            width: 100%;
            padding: 8px;
            margin-bottom: 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
            box-sizing: border-box;
        }

        .modal-content textarea {
            height: 80px;
            resize: vertical;
        }

        .modal-content select[multiple] {
            height: 100px;
        }

        .modal-content button {
            margin-right: 8px;
        }

        .modal-content .close-btn {
            background-color: #ddd;
            color: #37352f;
        }

            .modal-content .close-btn:hover {
                background-color: #ccc;
            }
</style>

<h2>Manage Products</h2>

@if (ViewData["MSG_SUCCESS"] != null)
{
    <div class="message-success">@ViewData["MSG_SUCCESS"]</div>
}

@if (ViewData["ERROR_MESSAGE"] != null)
{
    <div class="message-error">@ViewData["ERROR_MESSAGE"]</div>
}

<!-- Nút mở modal tạo sản phẩm -->
<button class="notion-button create-btn" onclick="openModal('create-product-modal')">Create New Product</button>

<!-- Modal tạo sản phẩm mới -->
<div id="create-product-modal" class="modal">
    <div class="modal-content">
        <h3>Create New Product</h3>
        <form method="post" action="@Url.Action("CreateProduct", "SellerManageProduct")" enctype="multipart/form-data">
            <label>Name:</label>
            <input type="text" name="name" required placeholder="Enter product name" />

            <label>Price:</label>
            <input type="number" name="price" required placeholder="Enter price" />

            <label>Description:</label>
            <textarea name="description" required placeholder="Enter description"></textarea>

            <label>Release Date:</label>
            <input type="date" name="releaseDate" required />

            <label>Author:</label>
            <input type="text" name="author" required placeholder="Enter author" />

            <label>Quantity:</label>
            <input type="number" name="quantity" required placeholder="Enter quantity" />

            <label>Categories:</label>
            <select name="categoryIds" multiple required>
                @if (ViewData["categoryList"] != null)
                {
                    var categories = (List<FoodOrderSystem.DTOs.CategoryDTO>)ViewData["categoryList"];
                    foreach (var category in categories)
                    {
                        <option value="@category.CategoryId">@category.CategoryName</option>
                    }
                }
            </select>

            <label>Image:</label>
            <input type="file" name="imageFile" id="imageFile" required accept="image/jpeg" onchange="validateImage()" />
            <small id="fileError" style="color: red; display: none;">Only JPG files are allowed.</small>

            <script>
                function validateImage() {
                    var fileInput = document.getElementById('imageFile');
                    var filePath = fileInput.value;
                    var allowedExtensions = /(\.jpg|\.jpeg)$/i;
                    var errorText = document.getElementById('fileError');

                    if (!allowedExtensions.exec(filePath)) {
                        errorText.style.display = 'block';
                        fileInput.value = ''; // Xóa file không hợp lệ
                    } else {
                        errorText.style.display = 'none';
                    }
                }
            </script>

            <button type="submit" class="notion-button create-btn">Create Product</button>
            <button type="button" class="notion-button close-btn" onclick="closeModal('create-product-modal')">Cancel</button>
        </form>
    </div>
</div>

<hr />

<!-- Danh sách sản phẩm -->
<h3>Product List</h3>
<table class="notion-table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Price</th>
            <th>Description</th>
            <th>Release Date</th>
            <th>Author</th>
            <th>Quantity</th>
            <th>Image</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (ViewData["productList"] != null)
        {
            var products = (List<FoodOrderSystem.DTOs.ProductDTO>)ViewData["productList"];
            foreach (var product in products)
            {
                <tr>
                    <td>@product.ProductId</td>
                    <td>@product.ProductName</td>
                    <td>@product.Price</td>
                    <td>@product.Description</td>
                    <td>@product.ReleaseDate.ToString("yyyy-MM-dd")</td>
                    <td>@product.Author</td>
                    <td>@product.Quantity</td>
                    <td><img src="@product.Img" alt="Product Image" width="50" /></td>
                    <td>@(product.StatusPro == 1 ? "Active" : "Inactive")</td>
                    <td>
                        <button class="notion-button update-btn" onclick="openModal('update-product-modal-@product.ProductId')">Update</button>

                        <form method="post" action="@Url.Action("ChangeProductStatus", "SellerManageProduct")" style="display: inline;">
                            <input type="hidden" name="productId" value="@product.ProductId" />
                            <button type="submit" class="notion-button @(product.StatusPro == 1 ? "deactivate-btn" : "activate-btn")">
                                @(product.StatusPro == 1 ? "Deactivate" : "Activate")
                            </button>
                        </form>

                        <form method="post" action="@Url.Action("DeleteProduct", "SellerManageProduct")" onsubmit="return confirm('Are you sure you want to delete this product?');" style="display: inline;">
                            <input type="hidden" name="productId" value="@product.ProductId" />
                            <button type="submit" class="notion-button delete-btn">Delete</button>
                        </form>
                    </td>
                </tr>

                <!-- Modal cập nhật sản phẩm -->
                <div id="update-product-modal-@product.ProductId" class="modal">
                    <div class="modal-content">
                        <h3>Update Product</h3>
                        <form method="post" action="@Url.Action("UpdateProduct", "SellerManageProduct")" enctype="multipart/form-data">
                            <input type="hidden" name="productId" value="@product.ProductId" />
                            <label>Name:</label>
                            <input type="text" name="name" value="@product.ProductName" required placeholder="Enter product name" />
                            <label>Price:</label>
                            <input type="number" name="price" value="@product.Price" required placeholder="Enter price" />
                            <label>Description:</label>
                            <textarea name="description" required placeholder="Enter description">@product.Description</textarea>
                            <label>Release Date:</label>
                            <input type="date" name="releaseDate" value="@product.ReleaseDate.ToString("yyyy-MM-dd")" required />
                            <label>Author:</label>
                            <input type="text" name="author" value="@product.Author" required placeholder="Enter author" />
                            <label>Quantity:</label>
                            <input type="number" name="quantity" value="@product.Quantity" required placeholder="Enter quantity" />
                            <label>Image:</label>
                            <input type="file" name="imageFile" />
                            <button type="submit" class="notion-button update-btn">Update</button>
                            <button type="button" class="notion-button close-btn" onclick="closeModal('update-product-modal-@product.ProductId')">Cancel</button>
                        </form>
                    </div>
                </div>
            }
        }
        else
        {
            <tr><td colspan="10">No products found.</td></tr>
        }
    </tbody>
</table>

<a href="@Url.Action("Index", "Home")" class="back-link">Back to Home</a>

<script>
    function openModal(modalId) {
        document.getElementById(modalId).style.display = 'flex';
    }

    function closeModal(modalId) {
        document.getElementById(modalId).style.display = 'none';
    }

    window.onclick = function(event) {
        var modals = document.getElementsByClassName('modal');
        for (var i = 0; i < modals.length; i++) {
            if (event.target == modals[i]) {
                modals[i].style.display = 'none';
            }
        }
    }
</script>